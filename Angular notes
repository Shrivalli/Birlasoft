Angular - client side javascript framework (base class libraries (node js modules)

Angular helps us to create SPA ( Single Page Application)

Node -node.js - node -v is used to check whether node is installed
node package manager - install 3rd party  
npm -v - to check the version of npm

To install angular - npm install -g @angular/cli
ng version - to check the version of angular


To create an angular project
ng new <prjname>

Angular routing? - press y
Stylesheet css - press enter

Folder structure:

1. node_modules - predefined packages
2. app - component  - building blocks of angular project
3. assets - wwwroot (static files/ images)
4. environments - production / dev environment
5. index.html - SPA(this is the only html file in your entire project)

Typescript - strongly typed language (OOPS) - extension - .ts

Component:
Every component will have 4 files

1.html - view 
2. ts - logic 
3. css- stylesheet 
4. spec.ts - unit testing file (jasmine and karma)

app.module.ts - program.cs (kickstarted into this module.ts file)

To execute the angular applications - cmd prompt - navigate within the project folder

ng serve - the project will get hosted in the port number 4200

Data Binding in Angular:
1. one way - the variables declared in ts to be displayed in html - {{variablename}}  --> Interpolation
2. Two way Binding - [(ngModel)] - FormsModule(import this namespace in app.module.ts)
3. Property Binding - Eg: <img [src]="variablename" height="100" width="100"/>
4. Event Binding - Eg: () Define a method in ts and associate the method with the click event of the button

Angular Routing:
1. routing.module.ts - Create a path for the component in the routing module.ts
const routes: Routes = [
  {path:'login',component:LoginComponent},
  {path:'cal',component:CalculateComponent}
];
2. In the home page create routerlink for the components
<a routerLink="path"> HyperText </a>
3. <router-outlet> </router-outlet>






















